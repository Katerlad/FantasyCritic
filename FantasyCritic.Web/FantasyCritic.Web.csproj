<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <Authors>Software Ateliers</Authors>
    <Company>Software Ateliers</Company>
    <Description>ASP.NET Core + Vue.js starter project</Description>
    <Copyright>MIT 2020 Software Ateliers</Copyright>
    <AssemblyName>FantasyCritic.Web</AssemblyName>
    <RootNamespace>FantasyCritic.Web</RootNamespace>
    <Version>2.4.0</Version>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
    <FileVersion>2.4.0.0</FileVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.6" />
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="3.9.7">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="VueCliMiddleware" Version="3.1.1" />
    <PackageReference Include="NLog" Version="4.7.3" />
    <PackageReference Include="NLog.Web.AspNetCore" Version="4.9.3" />
    <PackageReference Include="NodaTime" Version="3.0.0" />
    <PackageReference Include="NodaTime.Serialization.JsonNet" Version="3.0.0" />
    <PackageReference Include="RazorLight" Version="2.0.0-beta1" />
	<PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="3.1.6" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.1.6" />

  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="wwwroot\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="wwwroot\**" />
    <EmbeddedResource Remove="wwwroot\**" />
    <None Remove="wwwroot\**" />
    <TypeScriptCompile Remove="ClientApp\node_modules\**" />
    <TypeScriptCompile Remove="wwwroot\**" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="ClientApp\public\browserconfig.xml" />
    <Content Include="ClientApp\public\img\bg-geo-texture.png" />
    <Content Include="ClientApp\public\img\big-logo.png" />
    <Content Include="ClientApp\public\img\critic-royale-logo.svg" />
    <Content Include="ClientApp\public\img\critics-royale-text-white.svg" />
    <Content Include="ClientApp\public\img\critics-royale-text.svg" />
    <Content Include="ClientApp\public\img\critics-royale-top-nav.svg" />
    <Content Include="ClientApp\public\img\horizontal-logo.png" />
    <Content Include="ClientApp\public\img\horizontal-logo.svg" />
    <Content Include="ClientApp\public\img\icons\android-chrome-192x192.png" />
    <Content Include="ClientApp\public\img\icons\android-chrome-512x512.png" />
    <Content Include="ClientApp\public\img\icons\apple-touch-icon.png" />
    <Content Include="ClientApp\public\img\icons\favicon-16x16.png" />
    <Content Include="ClientApp\public\img\icons\favicon-32x32.png" />
    <Content Include="ClientApp\public\img\icons\favicon.ico" />
    <Content Include="ClientApp\public\img\icons\mstile-150x150.png" />
    <Content Include="ClientApp\public\img\icons\safari-pinned-tab.svg" />
    <Content Include="ClientApp\public\img\logo-white.png" />
    <Content Include="ClientApp\public\img\minimal-logo.png" />
    <Content Include="ClientApp\public\img\minimal-logo.svg" />
    <Content Include="ClientApp\public\img\monitor-mock.png" />
    <Content Include="ClientApp\public\img\share-logo.png" />
    <Content Include="ClientApp\public\img\small-logo-white.png" />
    <Content Include="ClientApp\public\sounds\draft-notification.mp3" />
    <Content Include="ClientApp\public\sounds\quite-impressed.mp3" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\FantasyCritic.FakeRepo\FantasyCritic.FakeRepo.csproj" />
    <ProjectReference Include="..\FantasyCritic.Lib\FantasyCritic.Lib.csproj" />
    <ProjectReference Include="..\FantasyCritic.MySQL\FantasyCritic.MySQL.csproj" />
    <ProjectReference Include="..\FantasyCritic.RDS\FantasyCritic.RDS.csproj" />
    <ProjectReference Include="..\FantasyCritic.SendGrid\FantasyCritic.SendGrid.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="EmailTemplates\ChangeEmail.cshtml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Update="EmailTemplates\ConfirmEmail.cshtml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Update="EmailTemplates\LeagueInvite.cshtml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Update="EmailTemplates\PasswordReset.cshtml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Update="EmailTemplates\SiteInvite.cshtml">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

    <PropertyGroup>
        <PreserveCompilationReferences>true</PreserveCompilationReferences>
        <PreserveCompilationContext>true</PreserveCompilationContext>
    </PropertyGroup>

</Project>
